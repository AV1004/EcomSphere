/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 .\public\models\EcomSphereHome.glb -k -K 
*/

import React, { useRef } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { useAtom } from "jotai";
import { currentPageAtom } from "./UI";
import { degToRad } from "three/src/math/MathUtils.js";
import { IoIosCreate } from "react-icons/io";
import { IoLogIn } from "react-icons/io5";
import { IoReturnDownBackOutline } from "react-icons/io5";
import { IoMdListBox } from "react-icons/io";
import { FaBoxes } from "react-icons/fa";
import { FaShoppingCart } from "react-icons/fa";
import { AiOutlineUserAdd } from "react-icons/ai";
import { useNavigate } from "react-router-dom";

const OverlayItem = ({
  className = "",
  title,
  description,
  price,
  bgColor,
  toLink,
  Icon,
  ...props
}) => {
  const [currentPage, setCurrentPage] = useAtom(currentPageAtom);

  const navigate = useNavigate();

  const IconRender = () => {
    if (Icon === "signup") {
      return <IoIosCreate size={25} />;
    } else if (Icon === "login") {
      return <IoLogIn size={25} />;
    } else if (Icon === "back") {
      return <IoReturnDownBackOutline color="black" size={25} />;
    } else if (Icon === "orders") {
      return <IoMdListBox size={25} />;
    } else if (Icon === "products") {
      return <FaBoxes size={25} />;
    } else if (Icon === "cart") {
      return <FaShoppingCart size={25} />;
    } else if (Icon === "yproducts") {
      return <AiOutlineUserAdd size={25} />;
    }
  };

  return (
    <Html
      transform
      distanceFactor={1.2}
      center
      className={`w-48 rounded-md overflow-hidden ${
        currentPage === "store" ? "" : "opacity-0"
      } transition-opacity duration-1000 ${className}`}
      {...props}
    >
      <div className="bg-white  bg-opacity-50 backdrop-blur-lg text-xs p-2 w-full">
        <h2 className="font-bold">{title}</h2>
        <p>{description}</p>
      </div>
      <button
        className={`${bgColor} hover:bg-opacity-50 transition-colors duration-500 px-4 py-2 justify-center flex font-bold text-white w-full text-xs`}
        onClick={() => {
          setCurrentPage("home");
          if (Icon !== "back") {
            navigate(toLink);
          }
        }}
      >
        {/* Go -&gt; */}
        <IconRender />
      </button>
    </Html>
  );
};

export function HomeModel({ isAuthenticated, html, ...props }) {
  const isMoblie = window.innerWidth < 768;

  const { nodes, materials } = useGLTF("models/EcomSphereHome.glb");
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="RootNode" position={[0.16, 0.603, -0.22]} scale={0.154}>
          <group
            name="Cube"
            position={[0, -0.041, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <mesh
              name="Cube001"
              geometry={nodes.Cube001.geometry}
              material={materials["Material.001"]}
            />
            <mesh
              name="Cube001_1"
              geometry={nodes.Cube001_1.geometry}
              material={materials.dirt}
            />
          </group>
        </group>
        <group
          name="Sketchfab_model"
          position={[-0.285, 0.605, -0.02]}
          rotation={[-Math.PI / 2, 0, 1.562]}
          scale={0.154}
        >
          {isAuthenticated === true
            ? html && (
                <OverlayItem
                  scale={5}
                  position-x={0.3}
                  position-y={-0.3}
                  position-z={2}
                  rotation-y={degToRad(-90)}
                  rotation-x={degToRad(90)}
                  toLink={"/cart"}
                  title={`Cart`}
                  Icon={"cart"}
                  description={"Check your cart here."}
                  bgColor={"bg-teal-400"}
                  className="transition delay-300"
                />
              )
            : html && (
                <OverlayItem
                  scale={5}
                  position-x={0.3}
                  position-y={-0.3}
                  position-z={0.9}
                  rotation-y={degToRad(-90)}
                  rotation-x={degToRad(90)}
                  toLink={"/signup"}
                  title={`Sign Up`}
                  Icon={"signup"}
                  description={"Register your self now!"}
                  bgColor={"bg-teal-400"}
                  className="transition delay-300"
                />
              )}
          <group
            name="root"
            position={[0, -0.015, 0]}
            visible={isAuthenticated === true ? true : false}
          >
            <group
              name="GLTF_SceneRootNode"
              position={[-0.063, 0.108, 0]}
              rotation={[Math.PI / 2, 0, 0]}
            >
              <group name="Plane002_1" position={[-1.574, 0.399, 0.554]}>
                <mesh
                  name="Object_10"
                  geometry={nodes.Object_10.geometry}
                  material={materials["Material.004"]}
                />
                <mesh
                  name="Object_11"
                  geometry={nodes.Object_11.geometry}
                  material={materials["Material.009"]}
                />
                <mesh
                  name="Object_12"
                  geometry={nodes.Object_12.geometry}
                  material={materials["Material.005"]}
                />
                <mesh
                  name="Object_13"
                  geometry={nodes.Object_13.geometry}
                  material={materials["Material.006"]}
                />
                <mesh
                  name="Object_14"
                  geometry={nodes.Object_14.geometry}
                  material={materials["Material.007"]}
                />
              </group>
            </group>
          </group>
        </group>
        <group
          name="Box001"
          position={[0.727, 0.46, -0.523]}
          scale={[0.009, 0.012, 0.015]}
        >
          <mesh
            name="Box001_1"
            geometry={nodes.Box001_1.geometry}
            material={materials["07___Default"]}
          />
          <mesh
            name="Box001_1_1"
            geometry={nodes.Box001_1_1.geometry}
            material={materials["14___Default"]}
          />
          <mesh
            name="Box001_1_2"
            geometry={nodes.Box001_1_2.geometry}
            material={materials["13___Default"]}
          />
          <mesh
            name="Box001_1_3"
            geometry={nodes.Box001_1_3.geometry}
            material={materials["02___Default"]}
          />
          <mesh
            name="Box001_1_4"
            geometry={nodes.Box001_1_4.geometry}
            material={materials["01___Default"]}
          />
          <mesh
            name="Box001_1_5"
            geometry={nodes.Box001_1_5.geometry}
            material={materials.Material__1352}
          />
          <mesh
            name="Box001_1_6"
            geometry={nodes.Box001_1_6.geometry}
            material={materials.Material__1351}
          />
          <mesh
            name="Box001_1_7"
            geometry={nodes.Box001_1_7.geometry}
            material={materials.Material__1350}
          />
          <mesh
            name="Box001_1_8"
            geometry={nodes.Box001_1_8.geometry}
            material={materials["15___Default"]}
          />
        </group>
        <group
          name="Cube003_Cube010"
          position={[-0.821, 0.609, -0.782]}
          scale={[0.368, 0.368, 0.611]}
        >
          {html && (
            <OverlayItem
              scale={3}
              position-x={-1}
              position-y={isAuthenticated === true ? 2.4 : 1.6}
              position-z={-1}
              Icon={"back"}
              bgColor={"bg-white"}
              className="transition delay-300"
            />
          )}
          {isAuthenticated === true
            ? html && (
                <OverlayItem
                  scale={3}
                  position-x={-1}
                  position-y={1}
                  position-z={-1}
                  toLink={"/orders"}
                  title={"Orders"}
                  description={"Check your Orders"}
                  Icon={"orders"}
                  bgColor={"bg-green-200"}
                  className="transition delay-300"
                />
              )
            : ""}
          {isAuthenticated === true
            ? html && (
                <OverlayItem
                  scale={2.8}
                  position-x={isMoblie ? -0.4 : -0.8}
                  position-y={-0.4}
                  // position-z={-1}
                  toLink={"/yourProducts"}
                  title={"Your Products"}
                  description={"Add your products."}
                  Icon={"yproducts"}
                  bgColor={"bg-indigo-500"}
                  className="transition delay-300"
                />
              )
            : ""}
          <mesh
            name="Cube003_Cube010-Mesh"
            geometry={nodes["Cube003_Cube010-Mesh"].geometry}
            material={materials["Gray.004"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_1"
            geometry={nodes["Cube003_Cube010-Mesh_1"].geometry}
            material={materials.Road}
          />
          <mesh
            name="Cube003_Cube010-Mesh_2"
            geometry={nodes["Cube003_Cube010-Mesh_2"].geometry}
            material={materials.None}
          />
          <mesh
            name="Cube003_Cube010-Mesh_3"
            geometry={nodes["Cube003_Cube010-Mesh_3"].geometry}
            material={materials["Orange.002"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_4"
            geometry={nodes["Cube003_Cube010-Mesh_4"].geometry}
            material={materials.BlackWindow}
          />
          <mesh
            name="Cube003_Cube010-Mesh_5"
            geometry={nodes["Cube003_Cube010-Mesh_5"].geometry}
            material={materials["Orange.001"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_6"
            geometry={nodes["Cube003_Cube010-Mesh_6"].geometry}
            material={materials["Bar.001"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_7"
            geometry={nodes["Cube003_Cube010-Mesh_7"].geometry}
            material={materials["Wheel.001"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_8"
            geometry={nodes["Cube003_Cube010-Mesh_8"].geometry}
            material={materials.Wheels}
          />
          <mesh
            name="Cube003_Cube010-Mesh_9"
            geometry={nodes["Cube003_Cube010-Mesh_9"].geometry}
            material={materials.Gas}
          />
          <mesh
            name="Cube003_Cube010-Mesh_10"
            geometry={nodes["Cube003_Cube010-Mesh_10"].geometry}
            material={materials.Rings}
          />
          <mesh
            name="Cube003_Cube010-Mesh_11"
            geometry={nodes["Cube003_Cube010-Mesh_11"].geometry}
            material={materials.Dial}
          />
          <mesh
            name="Cube003_Cube010-Mesh_12"
            geometry={nodes["Cube003_Cube010-Mesh_12"].geometry}
            material={materials.REd}
          />
          <mesh
            name="Cube003_Cube010-Mesh_13"
            geometry={nodes["Cube003_Cube010-Mesh_13"].geometry}
            material={materials.Leaves}
          />
          <mesh
            name="Cube003_Cube010-Mesh_14"
            geometry={nodes["Cube003_Cube010-Mesh_14"].geometry}
            material={materials.Grass}
          />
          <mesh
            name="Cube003_Cube010-Mesh_15"
            geometry={nodes["Cube003_Cube010-Mesh_15"].geometry}
            material={materials.Sidewalk}
          />
          <mesh
            name="Cube003_Cube010-Mesh_16"
            geometry={nodes["Cube003_Cube010-Mesh_16"].geometry}
            material={materials.Gray}
          />
          <mesh
            name="Cube003_Cube010-Mesh_17"
            geometry={nodes["Cube003_Cube010-Mesh_17"].geometry}
            material={materials.Blue}
          />
          <mesh
            name="Cube003_Cube010-Mesh_18"
            geometry={nodes["Cube003_Cube010-Mesh_18"].geometry}
            material={materials.Chairwheel}
          />
          <mesh
            name="Cube003_Cube010-Mesh_19"
            geometry={nodes["Cube003_Cube010-Mesh_19"].geometry}
            material={materials.AA}
          />
          <mesh
            name="Cube003_Cube010-Mesh_20"
            geometry={nodes["Cube003_Cube010-Mesh_20"].geometry}
            material={materials["Bar.000"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_21"
            geometry={nodes["Cube003_Cube010-Mesh_21"].geometry}
            material={materials["Material.002"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_22"
            geometry={nodes["Cube003_Cube010-Mesh_22"].geometry}
            material={materials.Window}
          />
          <mesh
            name="Cube003_Cube010-Mesh_23"
            geometry={nodes["Cube003_Cube010-Mesh_23"].geometry}
            material={materials.darker}
          />
          <mesh
            name="Cube003_Cube010-Mesh_24"
            geometry={nodes["Cube003_Cube010-Mesh_24"].geometry}
            material={materials["Material.003"]}
          />
          <mesh
            name="Cube003_Cube010-Mesh_25"
            geometry={nodes["Cube003_Cube010-Mesh_25"].geometry}
            material={materials.Tree}
          />
          <mesh
            name="Cube003_Cube010-Mesh_26"
            geometry={nodes["Cube003_Cube010-Mesh_26"].geometry}
            material={materials.Street}
          />
        </group>
        <group
          name="group336620870"
          position={[0.283, 0.6, 1.002]}
          scale={[5.57, 3.858, 2.892]}
        >
          {isAuthenticated === true
            ? html && (
                <OverlayItem
                  scale={[0.1, 0.15, 0.1]}
                  position-x={ isMoblie? -0.01  : 0.04}
                  position-y={0.05}
                  position-z={-0.1}
                  // rotation-y={degToRad(-90)}
                  // rotation-x={degToRad(90)}
                  toLink={"/products"}
                  title={`Products`}
                  Icon={"products"}
                  description={"Visit our all products."}
                  bgColor={"bg-black"}
                  className="transition delay-300"
                />
              )
            : html && (
                <OverlayItem
                  scale={[0.1, 0.15, 0.1]}
                  position-x={isMoblie ? -0.01 : 0.04}
                  position-y={0.05}
                  position-z={-0.1}
                  // rotation-y={degToRad(-90)}
                  // rotation-x={degToRad(90)}
                  toLink={"/signin"}
                  title={`Sign In`}
                  Icon={"login"}
                  description={"Login now to explore!"}
                  bgColor={"bg-black"}
                  className="transition delay-300"
                />
              )}
          <mesh
            name="mesh336620870"
            geometry={nodes.mesh336620870.geometry}
            material={materials["mat17.001"]}
          />
          <mesh
            name="mesh336620870_1"
            geometry={nodes.mesh336620870_1.geometry}
            material={materials["mat21.001"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/EcomSphereHome.glb");
